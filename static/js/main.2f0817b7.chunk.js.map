{"version":3,"sources":["containers/App.module.css","components/Persons/Person/Person.js","components/Persons/Persons.js","hoc/Wrapper.js","components/Cockpit/Cockpit.js","containers/App.js","reportWebVitals.js","index.js","components/Cockpit/Cockpit.module.css","components/Persons/Person/Person.module.css"],"names":["module","exports","checkChildren","theProps","person","props","console","log","className","classes","onClick","textClick","name","age","children","input","onChange","value","disabled","Boolean","Persons","this","persons","map","index","Person","clicked","bind","evt","changed","id","PureComponent","Wrapper","Cockpit","useEffect","setTimeout","alert","textClasses","personsLength","bold","triple","italic","double","single","text","toggleClasses","toggler","visible","push","red","style","color","join","fontSize","marginBottom","resetPersons","btn","togglePersons","React","memo","App","state","otherState","personsVisible","showCockpit","inputChangeHandler","personIndex","findIndex","p","target","setState","toggle","deletePerson","splice","prevProps","prevState","backgroundColor","fontWeight","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f0817b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3LxpD\",\"btn\":\"App_btn__3owv-\",\"person\":\"App_person__3BDw2\"};","import React from 'react';\r\nimport classes from './Person.module.css'\r\n\r\nlet checkChildren = (theProps) => {\r\n    if (theProps) {\r\n        return <p>{theProps}</p>;\r\n    }\r\n}\r\n\r\nconst person = (props) => {\r\n    console.log('%c [Person.js] render()', 'color: #0ff; background-color: #000; padding: 3px 5px; border-radius: 3px;');\r\n    return (\r\n        <div className={classes.person}>\r\n            <p className={classes['text-t']} onClick={props.textClick}><i>I am {props.name} and I'm {props.age} years old!</i></p>\r\n            {checkChildren(props.children)}\r\n            <input className={classes.input} onChange={props.onChange} value={props.name} disabled={Boolean(!props.onChange)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default person;","import React, { PureComponent } from 'react';\r\nimport Person from './Person/Person';\r\n\r\nclass Persons extends PureComponent {\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (nextProps.persons !== this.props.persons || nextProps.clicked !== this.props.clicked || nextProps.changed !== this.props.changed) {\r\n    //         console.log('%c [Persons.js] shouldComponentUpdate()', 'color: #0ff; background-color: #000; padding: 3px 5px; border-radius: 3px;');\r\n    //         return true;\r\n    //     } else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        console.log('%c [Persons.js] render()', 'color: #0ff; background-color: #000; padding: 3px 5px; border-radius: 3px;');\r\n\r\n        return this.props.persons.map((person, index) => {\r\n            return (\r\n                <Person key={person.id} textClick={(this.props.clicked.bind(this, index))} name={person.name} age={person.age} onChange={(evt) => { this.props.changed(evt, person.id) }} />\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Persons;","const Wrapper = props => props.children;\r\n\r\nexport default Wrapper;","import React, { useEffect } from 'react';\r\nimport classes from './Cockpit.module.css';\r\nimport Wrapper from '../../hoc/Wrapper';\r\n\r\nconst Cockpit = props => {\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            alert('[Cockpit.js] useEffect()');\r\n        }, 1000);\r\n\r\n        return () => { console.log('%c [Cockpit.js] cleaning process in useState()', 'color: #f00; background: #300; font-weight: bold; padding: 3px 5px; border-radius: 3px;') };\r\n    }, []);\r\n\r\n    // ? check useState() for different cases\r\n    // useEffect(() => {\r\n    //     const timer = setTimeout(() => {\r\n    //         alert('[Cockpit.js] 2nd useEffect()');\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         console.log('%c [Cockpit.js] 2nd cleaning process in useState()', 'color: #297; background: #010; font-weight: bold; padding: 3px 5px; border-radius: 3px;')\r\n    //         clearTimeout(timer);\r\n    //     };\r\n    // }, [props.persons]);\r\n\r\n    console.log('%c [Cockpit.js] render()', 'color: #f0f; background-color: #000; padding: 3px 5px; border-radius: 3px;');\r\n    let textClasses = [];\r\n\r\n    if (props.personsLength === 3) textClasses = [classes.bold, classes.triple];\r\n    else if (props.personsLength === 2) textClasses = [classes.bold, classes.italic, classes.double];\r\n    else if (props.personsLength === 1) textClasses = [classes.bold, classes.single];\r\n    else textClasses = [classes.text];\r\n\r\n    let toggleClasses = [classes.toggler];\r\n    if (props.visible) toggleClasses.push(classes.red);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <h1 key='el1' style={{ color: 'aqua' }}>A React App created with Components</h1>\r\n            <p key='el2' className={textClasses.join(' ')} style={{ fontSize: 18 }}>Just some text, nothing more</p>\r\n            <div key='el3' style={{ marginBottom: 10 }} onClick={props.resetPersons}><button className={classes.btn}>Reset</button></div>\r\n            <div key='el4'><button onClick={props.togglePersons} className={toggleClasses.join(' ')}>Toggle Persons</button></div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(Cockpit);\r\n\r\n// * elments can also be rendered without adjacent wrapper as array elements ðŸ˜®\r\n// * \"<> children </>\" can be used as wrapper ðŸ˜®","import React, { Component } from \"react\";\nimport classes from './App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from \"../components/Cockpit/Cockpit\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('%c [App.js] constructor()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('%c [App.js] getDerivedStateFromProps()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n    return null;\n  }\n\n  componentDidMount() {\n    console.log('%c [App.js] componentDidMount()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n  }\n\n  shouldComponentUpdate() {\n    console.log('%c [App.js] shouldComponentUpdate()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n    return true;\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('%c [App.js] getSnapshotBeforeUpdate()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n    return null;\n  }\n\n  componentDidUpdate() {\n    console.log('%c [App.js] componentDidUpdate()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n  }\n\n  componentWillUnmount() {\n    console.log('%c [App.js] componentWillUnmount()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n  }\n\n  state = {\n    persons: [\n      { id: 'tyuio', name: 'John', age: 22 },\n      { id: 'dfghj', name: 'Elizabeth', age: 18 },\n      { id: 'cvbmn', name: 'Charles', age: 16 }\n    ],\n    otherState: 'Some other value',\n    personsVisible: true,\n    showCockpit: true\n  }\n\n  inputChangeHandler = (evt, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    // ? equivalent of <<spread operator>> Object.assign({}, this.state.persons[personIndex]);\n    const person = { ...this.state.persons[personIndex] };\n    person.name = evt.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({ persons });\n  }\n\n  togglePersons = () => {\n    let toggle = !this.state.personsVisible;\n    this.setState({ personsVisible: toggle });\n  }\n\n  deletePerson = (personIndex) => {\n    // ? const persons = this.state.persons; -> this type of change mutates the the state directly as array is a reference type\n    const persons = [...this.state.persons]; // * or -> use slice() to get a copy arr.slice()\n    persons.splice(personIndex, 1);\n    this.setState({ persons }); // * equialent of ({ persons: persons })\n  }\n\n  resetPersons = () => {\n    this.setState({\n      persons: [\n        { id: 'tyuio', name: 'John', age: 22 },\n        { id: 'dfghj', name: 'Elizabeth', age: 18 },\n        { id: 'cvbmn', name: 'Charles', age: 16 }\n      ]\n    });\n  }\n\n  render() {\n    console.log('%c [App.js] render()', 'color: lime; background-color: #000; padding: 3px 5px; border-radius: 3px;');\n    let persons = null;\n\n    if (this.state.personsVisible) {\n      persons = (\n        <div>\n          <Persons persons={this.state.persons} clicked={this.deletePerson} changed={this.inputChangeHandler} />\n        </div>\n      );\n    }\n\n    return (\n      <div className={classes.App}>\n        <button onClick={() => { this.setState({ showCockpit: false }) }} style={{ backgroundColor: 'red', color: 'white', fontWeight: 'bold', fontSize: 18 }}>Remove Cockpit</button>\n        {\n          this.state.showCockpit ? <Cockpit personsLength={this.state.persons.length} visible={this.state.personsVisible} resetPersons={this.resetPersons} togglePersons={this.togglePersons} /> : null\n        }\n        {persons}\n      </div>\n    );\n  }\n}\n\n// * important\n// ! setState() merges states\n// ! useState state change replaces states\n// return React.createElement('div', { className: 'App' }, React.createElement('h1', null, 'I am really a title!'));\n\nexport default App;\n\n// ! previous version\n/* <Person name={this.state.persons[0].name} age={this.state.persons[0].age} onChange={this.inputChangeHandler} />\n<Person name={this.state.persons[1].name} age={this.state.persons[1].age} click={this.switchNameHandler.bind(this, 'Katy')} />\n<Person name={this.state.persons[2].name} age={this.state.persons[2].age} >My hobby: playing video games</Person> */\n\n// ? React.memo() Functional Component & Class-based {PureComponent} checks whether to render or not on every change","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggler\":\"Cockpit_toggler__3Zskr\",\"red\":\"Cockpit_red__ku-9w\",\"btn\":\"Cockpit_btn__3CDvB\",\"italic\":\"Cockpit_italic__3hRW0\",\"triple\":\"Cockpit_triple__2dZ4e\",\"double\":\"Cockpit_double__2R4xi\",\"single\":\"Cockpit_single__3R26K\",\"bold\":\"Cockpit_bold__rGy58\",\"text\":\"Cockpit_text__3ZUqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"Person_person__1tH88\",\"input\":\"Person_input__3a8D0\",\"text-t\":\"Person_text-t__2bDfe\",\"card\":\"Person_card__2djYH\"};"],"sourceRoot":""}