{"version":3,"sources":["App.module.css","Person/Person.js","App.js","reportWebVitals.js","index.js","Person/Person.module.css"],"names":["module","exports","checkChildren","theProps","person","props","className","class","classes","onClick","textClick","name","age","children","input","onChange","value","disabled","Boolean","App","state","persons","id","otherState","personsVisible","inputChangeHandler","evt","personIndex","findIndex","p","target","setState","togglePersons","toggle","deletePerson","splice","resetPersons","toggleClasses","toggler","this","map","index","Person","bind","push","red","textClasses","length","bold","triple","italic","double","single","text","style","color","join","fontSize","marginBottom","btn","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8c58b4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Aom1\",\"person\":\"App_person__6UwQa\",\"btn\":\"App_btn__1wFCl\",\"toggler\":\"App_toggler__bzjom\",\"red\":\"App_red__6J2sS\",\"italic\":\"App_italic__3IRlW\",\"triple\":\"App_triple__2RqWt\",\"double\":\"App_double__gUaGY\",\"single\":\"App_single__17oAr\",\"bold\":\"App_bold__15UqD\",\"text\":\"App_text__12RxK\"};","import React from 'react';\r\nimport classes from './Person.module.css'\r\n\r\nlet checkChildren = (theProps) => {\r\n    if (theProps) {\r\n        return <p>{theProps}</p>;\r\n    }\r\n}\r\n\r\nconst person = (props) => {\r\n    // let num = Math.random();\r\n    // console.log(num);\r\n\r\n    // if (num < 0.1) {\r\n    //     throw new Error('An error occured!');\r\n    // }\r\n\r\n    return (\r\n        <div className={props.class}>\r\n            <p className={classes['text-t']} onClick={props.textClick}><i>I am {props.name} and I'm {props.age} years old!</i></p>\r\n            {checkChildren(props.children)}\r\n            <input className={classes.input} onChange={props.onChange} value={props.name} disabled={Boolean(!props.onChange)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default person;","import React, { Component } from \"react\";\nimport classes from './App.module.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'tyuio', name: 'John', age: 22 },\n      { id: 'dfghj', name: 'Elizabeth', age: 18 },\n      { id: 'cvbmn', name: 'Charles', age: 16 }\n    ],\n    otherState: 'Some other value',\n    personsVisible: true\n  }\n\n  inputChangeHandler = (evt, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    // ? equivalent of <<spread operator>> Object.assign({}, this.state.persons[personIndex]);\n    const person = { ...this.state.persons[personIndex] };\n    person.name = evt.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({ persons });\n  }\n\n  togglePersons = () => {\n    let toggle = !this.state.personsVisible;\n    this.setState({ personsVisible: toggle });\n  }\n\n  deletePerson = (personIndex) => {\n    // ? const persons = this.state.persons; -> this type of change mutates the the state directly as array is a reference type\n    const persons = [...this.state.persons]; // * or -> use slice() to get a copy arr.slice()\n    persons.splice(personIndex, 1);\n    this.setState({ persons }); // * equialent of ({ persons: persons })\n  }\n\n  resetPersons = () => {\n    this.setState({\n      persons: [\n        { id: 'tyuio', name: 'John', age: 22 },\n        { id: 'dfghj', name: 'Elizabeth', age: 18 },\n        { id: 'cvbmn', name: 'Charles', age: 16 }\n      ]\n    });\n  }\n\n  render() {\n    let persons = null;\n    let toggleClasses = [classes.toggler];\n\n    if (this.state.personsVisible) {\n      persons = (<div>\n        {this.state.persons.map((person, index) => {\n          return (\n            <Person class={classes.person} key={person.id} textClick={(this.deletePerson.bind(this, index))} name={person.name} age={person.age} onChange={(evt) => { this.inputChangeHandler(evt, person.id) }} />\n          );\n          // ! events and classes don't work with Component itself\n        })}\n      </div>);\n\n      toggleClasses.push(classes.red);\n\n      // * styles.backgroundColor = '#d00';\n\n    }\n\n    // * const hideButtonStyles = { ...styles, marginRight: 7 };\n    let textClasses = [];\n\n    if (this.state.persons.length === 3) textClasses = [classes.bold, classes.triple];\n    else if (this.state.persons.length === 2) textClasses = [classes.bold, classes.italic, classes.double];\n    else if (this.state.persons.length === 1) textClasses = [classes.bold, classes.single];\n    else textClasses = [classes.text];\n\n    return (\n      <div className={classes.App}>\n        <h1 style={{ color: 'aqua' }}>A React App created with Components</h1>\n        <p className={textClasses.join(' ')} style={{ fontSize: 18 }}>Just some text, nothing more</p>\n        <div style={{ marginBottom: 10 }} onClick={this.resetPersons}><button className={classes.btn}>Reset</button></div>\n        <div><button className={toggleClasses.join(' ')} onClick={this.togglePersons}>Toggle Persons</button></div>\n        {persons}\n      </div>\n    );\n  }\n}\n\n// * important\n// ! setState() merges states\n// ! useState state change replaces states\n// return React.createElement('div', { className: 'App' }, React.createElement('h1', null, 'I am really a title!'));\n\nexport default App;\n\n// ! previous version\n/* <Person name={this.state.persons[0].name} age={this.state.persons[0].age} onChange={this.inputChangeHandler} />\n<Person name={this.state.persons[1].name} age={this.state.persons[1].age} click={this.switchNameHandler.bind(this, 'Katy')} />\n<Person name={this.state.persons[2].name} age={this.state.persons[2].age} >My hobby: playing video games</Person> */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Person_input__1OhkH\",\"text-t\":\"Person_text-t__1oRxN\",\"card\":\"Person_card__3coUa\"};"],"sourceRoot":""}